/*
EFT LILIAN ZAPATA
CONSULTA BASE DE DATOS
11-05-2025
*/

SHOW USER;
ADMIN*

-- CASO 1: ESTRATEGIA DE SEGURIDAD

-- CREACION DE LOS USUARIOS
CREATE USER PRY2205_EFT_FB  -- CREACION DE USUARIO 1 
    IDENTIFIED BY LilianZapata89       -- CONTRASEÑA
    DEFAULT TABLESPACE DATA            -- TABLESPACE QUE USA
    TEMPORARY TABLESPACE TEMP          -- TEMPORAL
    QUOTA 10M ON DATA;                 -- CUOTA QUE USARA EN M
-- DROP USER PRY2205_EFT_FB CASCADE;   

CREATE USER PRY2205_EFT_FB_DES  -- CREACION DE USUARIO 2
    IDENTIFIED BY LilianZapata89       -- CONTRASEÑA
    DEFAULT TABLESPACE DATA            -- TABLESPACE QUE USA
    TEMPORARY TABLESPACE TEMP          -- TEMPORAL
    QUOTA 10M ON DATA;                 -- CUOTA QUE USARA EN M
-- DROP USER PRY2205_EFT_DES CASCADE;    
    
CREATE USER PRY2205_EFT_FB_CON  -- CREACION DE USUARIO 3
    IDENTIFIED BY LilianZapata89       -- CONTRASEÑA
    DEFAULT TABLESPACE DATA            -- TABLESPACE QUE USA
    TEMPORARY TABLESPACE TEMP          -- TEMPORAL
    QUOTA 10M ON DATA;                 -- CUOTA QUE USARA EN M
-- DROP USER PRY2205_EFT_FB_CON CASCADE;     

-----------------------------------------------------------------------------------------
-- CREACION DE ROL 
CREATE ROLE PRY2205_EFT_ROLC;
-- DROP ROLE PRY2205_EFT_ROLC;

-----------------------------------------------------------------------------------------
-- ASIGNACION DE PRIVILEGIOS DE SESSION
GRANT CREATE SESSION TO PRY2205_EFT_FB;           -- PERMISO PARA EL DUEÑO
GRANT CREATE SESSION TO PRY2205_EFT_FB_DES;       -- PERMISO PARA EL DESARROLLADOR
GRANT CREATE SESSION TO PRY2205_EFT_ROLC;         -- PERMISO PARA EL CONSULTOR

-----------------------------------------------------------------------------------------
-- ASIGNACION DEL ROLC PARA EL USUARIO EFT_FB_CON
GRANT PRY2205_EFT_ROLC TO PRY2205_EFT_FB_CON;

-----------------------------------------------------------------------------------------
-- CREACION DE LOS PERMISOS PARA USUARIO DUEÑO
GRANT CREATE TABLE TO PRY2205_EFT_FB;

-----------------------------------------------------------------------------------------
-- PERMISO PARA LA CREACION DE TABLAS PARA USUARIO PRY2205_EFT_FB DUEÑO
GRANT CREATE TABLE TO PRY2205_EFT_FB;
GRANT CREATE SEQUENCE TO PRY2205_EFT_FB;
GRANT CREATE VIEW TO PRY2205_EFT_FB;
GRANT CREATE INDEXTYPE TO PRY2205_EFT_FB;
GRANT CREATE SYNONYM TO PRY2205_EFT_FB;
GRANT CREATE PUBLIC SYNONYM TO PRY2205_EFT_FB;

-----------------------------------------------------------------------------------------
-- PERMISOS PARA USUARIO DESARROLLADOR PRY2205_EFT_FB_DES
GRANT CREATE VIEW TO PRY2205_EFT_FB_DES;
GRANT CREATE SEQUENCE TO PRY2205_EFT_FB_DES;
GRANT CREATE PUBLIC SYNONYM TO PRY2205_EFT_FB_DES;

-- PERMISOS PARA USUARIO PRY2205_EFT_FB_CON PARA CONSULTAS
GRANT SELECT ON PRY2205_EFT_FB_DES.VW_INFO_CLIENTE_COMPLETA TO PRY2205_EFT_ROLC;
-- PRMISO PARA EL ROL
ALTER USER PRY2205_EFT_FB_CON DEFAULT ROLE PRY2205_EFT_ROLC
--VER QUE ESTE ACTIVO EL USUARIO

----------------------------------------------------------------------------------------
-- DROP PUBLIC SYNONYM SYN_INFO_CLIENTE_COMPLETA;   DROP PARA BORRAR EL SINONIMO



SHOW USER;
-- USUARIO 1 PRY2205_EFT_FB

/*      
        CASO 2 Creación De Informe
        SE POBLARON LA TABLAS, PERO SE BORRARON PARA EL SCRIPT
*/

-- CREACION DE LOS SINONIMOS PUBLICOS CASO 2
CREATE PUBLIC SYNONYM SYN_CLIENTE FOR PRY2205_EFT_FB.CLIENTE;
CREATE PUBLIC SYNONYM SYN_TARJETA_CLIENTE FOR PRY2205_EFT_FB.TARJETA_CLIENTE;
CREATE PUBLIC SYNONYM SYN_PAGO_MENSUAL_TARJETA_CLIENTE FOR PRY2205_EFT_FB.PAGO_MENSUAL_TARJETA_CLIENTE;
CREATE PUBLIC SYNONYM SYN_CUOTA_TRANSAC_TARJETA_CLIENTE FOR PRY2205_EFT_FB.CUOTA_TRANSAC_TARJETA_CLIENTE;
CREATE PUBLIC SYNONYM SYN_COBRO_MENSUAL_TARJETA FOR PRY2205_EFT_FB.COBRO_MENSUAL_TARJETA;
CREATE PUBLIC SYNONYM SYN_TIPO_CLIENTE FOR PRY2205_EFT_FB.TIPO_CLIENTE;
CREATE PUBLIC SYNONYM SYN_COMUNA FOR PRY2205_EFT_FB.COMUNA;
CREATE PUBLIC SYNONYM SYN_REGION FOR PRY2205_EFT_FB.REGION;
CREATE PUBLIC SYNONYM SYN_PROFESION_OFICIO FOR PRY2205_EFT_FB.PROFESION_OFICIO;

-- PERMISO DE LECTURA PARA EL USUARIO PRY2205_EFT_FB_DES
GRANT SELECT ON PRY2205_EFT_FB.CLIENTE TO PRY2205_EFT_FB_DES;
GRANT SELECT ON PRY2205_EFT_FB.TARJETA_CLIENTE TO PRY2205_EFT_FB_DES;
GRANT SELECT ON PRY2205_EFT_FB.TIPO_CLIENTE TO PRY2205_EFT_FB_DES;
GRANT SELECT ON PRY2205_EFT_FB.COMUNA TO PRY2205_EFT_FB_DES;
GRANT SELECT ON PRY2205_EFT_FB.REGION TO PRY2205_EFT_FB_DES;
GRANT SELECT ON PRY2205_EFT_FB.PROFESION_OFICIO TO PRY2205_EFT_FB_DES;

-- PERMISO DE LECTIRA PARA USUARIO PREY2205_EFT_FB_CON
GRANT SELECT ON PRY2205_EFT_FB.CLIENTE TO PRY2205_EFT_FB_CON;
GRANT SELECT ON PRY2205_EFT_FB.TARJETA_CLIENTE TO PRY2205_EFT_FB_CON;
GRANT SELECT ON PRY2205_EFT_FB.TIPO_CLIENTE TO PRY2205_EFT_FB_CON;
GRANT SELECT ON PRY2205_EFT_FB.COMUNA TO PRY2205_EFT_FB_CON;
GRANT SELECT ON PRY2205_EFT_FB.REGION TO PRY2205_EFT_FB_CON;
GRANT SELECT ON PRY2205_EFT_FB.PROFESION_OFICIO TO PRY2205_EFT_FB_CON;



-----------------------------------------------------------------------------
--LLENADO DE LA TABLA COBRO_MENSUAL_TRAJETA MEDIANTE INSERT-SELECT CASO 2
INSERT INTO COBRO_MENSUAL_TARJETA(       -- COLUMNAS QUE IRAN EN LA TABLA
    FECHA_PROCESO,
    NRO_TARJETA,
    RUN_CLIENTE,
    NOMBRE_CLIENTE,
    DIRECCION_CLIENTE,
    CUPO_TOTAL_ASIGNADO,
    CUPO_DISPONIBLE_ANTES_PAGO,
    VALOR_PAGO_MES,
    SALDO_PAGO_MES_ANT, 
    DIAS_ATRASO_PAGO_MES_ANT,
    MONTO_PAGAR_POR_ATRASO,
    VALOR_TOTAL_PAGAR_MES,
    CUPO_DISPONIBLE_DP_PAGO,
    FECHA_ULTIMO_PAGO)
SELECT
    202403,                                                            -- MES DEL PROCESO MARZP 2024
    tcli.NRO_TARJETA   AS "NRO_TARJETA",                               -- NUMERO DE LA TARJETA
    TO_CHAR(cli.NUMRUN) || '-' || cli.DVRUN AS "RUN_CLIENTE",          -- FORMATO DEL RUN
    UPPER(cli.PNOMBRE || ' ' || NVL(cli.SNOMBRE, '') || ' ' || cli.APPATERNO || ' ' || NVL(cli.APMATERNO, '')) AS "NOMBRE_CLIENTE", -- NOMBRE EN MAYUSCULA CONCATENADO
    cli.DIRECCION AS "DIRECCION_CLIENTE",                              -- DIRECCION DEL CLIENTE
    tcli.CUPO_COMPRA AS "CUPO_TOTAL_ASIGNADO",                         -- CUPO PARA LAS COMPRAS
    tcli.CUPO_DISP_COMPRA AS "CUPO_DISPONIBLE_ANTES_PAGO",             -- DINERO DISPONIBLE ANTES DE PAGAR
    pmcli.MONTO_TOTAL_PAGAR  AS "VALOR_PAGO_MES",                      -- CUANTO TIENE QUE PAGAR                                     --
    NVL(mes_anterior.SALDO_RESTANTE, 0) AS "SALDO_PAGO_MES_ANT",       -- LO QUE LE FALTO PAGAR DEL MES ANTERIOR
    NVL(mes_anterior.DIAS_ATRASO, 0) AS "DIAS_ATRASO_PAGO_MES_ANT",    -- DIAS ATRASADOS DEL MES ANTERIOR
    CASE                                                               -- CASE QUE CALCULA EL MONTO POR ESTAR ATRASADO
        WHEN mes_anterior.DIAS_ATRASO BETWEEN 1 AND 5 THEN ROUND(pmcli.MONTO_TOTAL_PAGAR * 0.10)
        WHEN mes_anterior.DIAS_ATRASO BETWEEN 6 AND 10 THEN ROUND(pmcli.MONTO_TOTAL_PAGAR * 0.20)
        WHEN mes_anterior.DIAS_ATRASO BETWEEN 11 AND 15 THEN ROUND(pmcli.MONTO_TOTAL_PAGAR * 0.30)
        WHEN mes_anterior.DIAS_ATRASO BETWEEN 16 AND 20 THEN ROUND(pmcli.MONTO_TOTAL_PAGAR * 0.40)
        WHEN mes_anterior.DIAS_ATRASO > 20 THEN ROUND(pmcli.MONTO_TOTAL_PAGAR * 0.60)
        ELSE 0
    END AS "MONTO_PAGAR_POR_ATRASO",
    pmcli.MONTO_TOTAL_PAGAR + NVL(mes_anterior.SALDO_RESTANTE, 0) +   -- CALCULO TOTAL CON EL ATRASO INCLUIDO
    CASE
        WHEN mes_anterior.DIAS_ATRASO BETWEEN 1 AND 5 THEN ROUND(pmcli.MONTO_TOTAL_PAGAR * 0.10)
        WHEN mes_anterior.DIAS_ATRASO BETWEEN 6 AND 10 THEN ROUND(pmcli.MONTO_TOTAL_PAGAR * 0.20)
        WHEN mes_anterior.DIAS_ATRASO BETWEEN 11 AND 15 THEN ROUND(pmcli.MONTO_TOTAL_PAGAR * 0.30)
        WHEN mes_anterior.DIAS_ATRASO BETWEEN 16 AND 20 THEN ROUND(pmcli.MONTO_TOTAL_PAGAR * 0.40)
        WHEN mes_anterior.DIAS_ATRASO > 20 THEN ROUND(pmcli.MONTO_TOTAL_PAGAR * 0.60)
        ELSE 0
    END AS "VALOR_TOTAL_PAGAR_MES",
    tcli.CUPO_DISP_COMPRA AS "CUPO_DISPONIBLE_DP_PAGO",            -- CUANTO TIENE DESPUES DE PAGAR
    pmcli.FECHA_PAGO    AS "FECHA_ULTIMO_PAGO"                     -- CUANDO PAGO LA ULTIMA VEZ
FROM
    SYN_TARJETA_CLIENTE tcli                                       -- DESDE LA TABLA CLIENTE MEDIANTE SINONIMOS
JOIN                                                               -- UNE CLIENTE POR RUN CON EL NUMRUN DE TARJETA CLIENTE
    SYN_CLIENTE cli ON tcli.NUMRUN = cli.NUMRUN
JOIN                                                               -- UNE LAS TABLAS PAGO MENSUAL CON TARJETA CLIENTE MEDIANTE EL NUMERO DE TARJETA
    SYN_PAGO_MENSUAL_TARJETA_CLIENTE pmcli ON pmcli.NRO_TARJETA = tcli.NRO_TARJETA AND pmcli.ANNO_MES_PAGO = 202403
LEFT JOIN (                 -- SUB CONSULATA PARA TENER LOS DATOS DEL MES ANTERIOR
    SELECT
        NRO_TARJETA,
        SALDO_POR_PAGAR AS "SALDO_RESTANTE",
        GREATEST(FECHA_PAGO - FECHA_VENCIMIENTO, 0) AS "DIAS_ATRASO",
        ANNO_MES_PAGO
    FROM
        SYN_PAGO_MENSUAL_TARJETA_CLIENTE                           -- DESDE EL PAGO MENSUAL DE LA TARJETA
    WHERE                                                          -- FILTRO SEGUN LA FECHA QUE SE BUSCA DE MARZO 2024           
        ANNO_MES_PAGO = 202402
) mes_anterior ON mes_anterior.NRO_TARJETA = tcli.NRO_TARJETA
ORDER BY 1 ASC;                                                    -- ORDENAR ASC PORP LA PRIMERA COLUMNA
    
/*   PARA VER LA ESTRUCTURA DE LAS TABLAS  
DESC PAGO_MENSUAL_TARJETA_CLIENTE;
DESC CLIENTE;
DESC TARJETA_CLIENTE;
DESC COBRO_MENSUAL_TARJETA;
*/

-- PERMISO PARA VER LA CONSULTA POR EL OTRO USUARIO
GRANT SELECT ON COBRO_MENSUAL_TARJETA TO PRY2205_EFT_FB_CON;

-- CREACION DE ALIAS DE LA TABLA ANTERIOR
CREATE PUBLIC SYNONYM SYN_COBRO_MENSUAL_TARJETA FOR COBRO_MENSUAL_TARJETA;

-- DELETE FROM COBRO_MENSUAL_TARJETA;
-- COMMIT;


-- DROP VIEW VW_INFO_CLIENTE_COMPLETA;  -- BORRA LA VISTA CREADA POR EL USUARIO DES



------------------------------------------------------------------------------------------------------------
-- OBERVACION: NO LOGRE VER MEDIANTE EL USUARIO CON, LA VISTA CREADA POR EL USUARIO DES.
-- POR LO QUE PARA PODER VERLA DESDE CON, LA CREE CON FB (PERO SI FUNCIONA CONSULTAR CON DES)
------------------------------------------------------------------------------------------------------------

-- CREACION DE LOS INDEX CASO 4

-- INEDEX PARA MEJORAR EL ACCESO A LOS RESGRISTROS DE PAGO
CREATE INDEX IDX_PAGO_ANNO_TARJETA ON PAGO_MENSUAL_TARJETA_CLIENTE (ANNO_MES_PAGO, NRO_TARJETA);

--INDEX PARA ACELERAR LA UNION DE LAS TARJETSA CON LOS CLIENTES
CREATE INDEX IDX_TCLI_NUMRUN ON TARJETA_CLIENTE(NUMRUN);

-- INDEX PARA ACELERAR LA REVISION DE RUN
CREATE INDEX IDX_CLIENTE_NUMRUN ON CLIENTE(NUMRUN);

-- INDEX PARA CONSULTAR ESPECIFICAMENTE LA COLUMNA DE FECHA_PROCESO
CREATE INDEX IDX_FECHA_PROCESO ON COBRO_MENSUAL_TARJETA (FECHA_PROCESO);


-- MUESTRA LA TABLA DONDE SE VE SI ESTA FULL (TALLER) PERO SIGUE FULL
EXPLAIN PLAN FOR
SELECT *                                                          -- SE SELECCIONA TODO
FROM COBRO_MENSUAL_TARJETA                                        -- SE ELIGE LA TABLA
WHERE FECHA_PROCESO = 202403;                                     -- SE FILTRA POR LA FECHA
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

-- COMO SEGUIA DANDO FULL, BUSQUE COMO FORZAR
EXPLAIN PLAN FOR
SELECT /*+ INDEX(COBRO_MENSUAL_TARJETA IDX_FECHA_PROCESO) */ *    -- VE TOTAS LAS COLUMNAS, FORZANDO AL INDICE AUNQUE SEAN POCOS VALORES (EN ESTE CASO 20)
FROM COBRO_MENSUAL_TARJETA
WHERE FECHA_PROCESO = 202403;                                     -- SE FILTRA POR LA FECHA
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

SHOW USER;

-- USUAERIO PRY2205_EFT_FB_DES

-- CASO 3_ CREACION DE UNA VISTA

--CRACION DE LA VISTA
CREATE OR REPLACE VIEW VW_INFO_CLIENTE_COMPLETA AS
    SELECT
        ROW_NUMBER() OVER (ORDER BY cli.numrun) AS "CORRELATIVO",                -- GENERACION DE NUMERO CORRELATIVO
        TO_CHAR(cli.numrun, '99G999G999') || '-' || cli.dvrun AS "RUN_CLIENTE",  -- FORMATE DEL RUN EN FORMATO XX.XXX.XXX-X
        INITCAP(cli.pnombre || ' ' || NVL(cli.snombre, '') || ' ' || cli.appaterno || NVL(cli.apmaterno, '')) AS "NOMBRE_CLIENTE",  -- CONCATENACION NOMNRE LETRA CAPITAL
        cli.cod_tipo_cliente AS "COD_TIPO_CLIENTE",                              -- CODIGO DEL TIPO DE CLIENTE
        ticli.nombre_tipo_cliente AS "NOMBRE_TIPO_CLIENTE",                      -- TIPO DE CLIENTE
        INITCAP(prof.nombre_prof_ofic) AS "PROFESION",                           -- PROFESION DEL CLIENTE
        co.nombre_comuna AS "NOMBRE_COMUNA",                                     -- COMUNA DE RESIDENCIA
        reg.nombre_region AS "NOMBRE_REGION",                                    -- REGION DE RESIDENCIA
        CASE                        -- CASO QUE CLASIDICA EL INGRESO
            WHEN cli.cod_tipo_cliente BETWEEN 10 AND 20 THEN 'ALTO_INGRESO'
            WHEN cli.cod_tipo_cliente = 30 THEN 'MEDIO_INGRESO'
            ELSE 'BAJO_INGRESO'
        END AS "SEGMENTO_INGRESO",
        (SELECT                                             -- SUBCONSULTA PARA SELECCIONAR SOLO 1 TARJETA SI ES QUE TIENE MAS
            MIN(tcli.nro_tarjeta)                           -- SE ELIGE LA MENOR
        FROM SYN_TARJETA_CLIENTE tcli                       -- DESDE LA TARJETA CLIENTE, SU ALIAS
        WHERE tcli.numrun = cli.numrun                      -- SE RELACIONA TARJETA CLIENTE CON CLIENTE MEDIANTE NUMRUN
        ) AS "NUMERO_TARJETA"
    FROM SYN_CLIENTE cli                                    -- DESDE LA TABLA CLIENTE
    JOIN                                                    -- SE UEN TIPO CLIENTE CON CLIENTE MEDIANTE EL CODIDO DE TIPO DE CLIENTE
        SYN_TIPO_CLIENTE ticli ON cli.cod_tipo_cliente = ticli.cod_tipo_cliente
    JOIN                                                    -- SE UNE PREFECION CON CLIENTE MEDIANTE EL CODIFO DE PROFESION
        SYN_PROFESION_OFICIO prof ON cli.cod_prof_ofic = prof.cod_prof_ofic
    JOIN                                                    -- SE UNE COMUNA CONC CLIENTE MEDIANTE EL CODIGO DE REGION, CON EL COD DE PROV Y EL DE COMUNA, TAMBIE POR SUS CODIGOS
        SYN_COMUNA co ON cli.cod_region = co.cod_region AND cli.cod_provincia = co.cod_provincia AND cli.cod_comuna = co.cod_comuna
    JOIN                                                    -- SE UNE REGION CON CLIENTE, MEDIANTE EL CODIDO DE REGION
        SYN_REGION reg ON cli.cod_region = reg.cod_region
    ORDER BY 1;                                                     -- ORDEN ASCENDENTE DE CORRELATIVO
    
    
-- PARA VER LAS TABLAS
-- DESC SYN_PROFESION_OFICIO;
-- DESC SYN_CLIENTE;

-- CREACCIO DE LOS SINONIMOS Y EL PERMSIO DE LECTURA
-- CREACION DEL SINONIO
CREATE PUBLIC SYNONYM SYN_INFO_CLIENTE_COMPLETA FOR PREY2205_EFT_FB_DES.VW_INFO_CLIENTE_COMPLETA;

-- CONSULTA QUE ME MUESTRA LOS NOMBRES DE LAS VISTAS QUE HAY CREADAS
-- SELECT view_name FROM user_views WHERE view_name = 'VW_INFO_CLIENTE_COMPLETA';

SHOW USER;

-- USUARIO PRY2205_EFT_FB_CON

-- CONSULTAS DE LOS CASOS 2 Y 3, PERTENECIENTES A OTROS USUARUOS

--VISTA DEL CASO 2 GENERADO POR EL USER PRY2205_EFT_FB
SELECT * FROM SYN_COBRO_MENSUAL_TARJETA;

-- VISTA DEL CASO 3 GENERADO POR EL USER PRY2205_EFT_FB_DES
SELECT * FROM SYN_INFO_CLIENTE_COMPLETA;   -- por mas que trate no me dejo verla desde con, si no era hecha por fb y no por des
